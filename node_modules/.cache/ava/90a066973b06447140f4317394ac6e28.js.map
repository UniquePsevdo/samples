{"version":3,"sources":["includes.js"],"names":["includes","array","number","binarySearch","arr","val","minIdx","maxIdx","length","guessIdx","Math","floor","t","is"],"mappings":";;AAuCA;;AAvCA,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC7B,WAAQC,aAAaF,KAAb,EAAoBC,MAApB,IAA8B,CAAC,CAAvC;AACH;;AAED;;;;;;;;;;;;;;;;AAgBA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAA+B;AAC3B,QAAIC,SAAS,CAAb;AAAA,QACIC,SAASH,IAAII,MAAJ,GAAW,CADxB;AAAA,QAEIC,QAFJ;AAGA,WAAMH,SAAOC,MAAb,EAAoB;AAChBE,mBAAWC,KAAKC,KAAL,CAAW,CAACJ,SAAOD,MAAR,IAAgB,CAA3B,CAAX;AACA,YAAGF,IAAIK,QAAJ,MAAkBJ,GAArB,EAAyB;AACrB,mBAAOI,QAAP;AACH,SAFD,MAEM,IAAGL,IAAIE,MAAJ,IAAYF,IAAIK,QAAJ,CAAf,EAA6B;AAC/BH,qBAASA,SAAS,CAAlB;AACH,SAFK,MAED;AACDC,qBAASA,SAAS,CAAlB;AACH;AACJ;AACD,WAAO,CAAC,CAAR;AACH;;AAED,MAAMH,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAC,EAAf,EAAmB,EAAnB,EAAuB,IAAvB,EAA6B,GAA7B,CAAZ;;AAGA,eAAKQ,KAAGA,EAAEC,EAAF,CAAKV,aAAaC,GAAb,EAAkB,CAAlB,CAAL,EAA2B,CAA3B,CAAR","file":"includes.js","sourcesContent":["function includes(array, number) {\n    return (binarySearch(array, number) > -1)\n}\n\n/*\nfunction binarySearch(array, number, leftIndex, rightIndex) {\n    let midIndex = Math.floor((rightIndex + leftIndex) / 2)\n    let current = array[midIndex]\n    if (rightIndex < leftIndex) {\n        return undefined\n    }\n    if (number === current) {\n        return midIndex\n    }\n    if (number < current) {\n        return binarySearch(array, number, leftIndex, midIndex - 1)\n    }\n    return binarySearch(array, number, midIndex + 1, rightIndex)\n}*/\n\nfunction binarySearch(arr, val){\n    let minIdx = 0,\n        maxIdx = arr.length-1,\n        guessIdx;\n    while(minIdx<maxIdx){\n        guessIdx = Math.floor((maxIdx+minIdx)/2)\n        if(arr[guessIdx] === val){\n            return guessIdx\n        }else if(arr[minIdx]<arr[guessIdx]){\n            minIdx = minIdx + 1\n        }else{\n            maxIdx = maxIdx - 1\n        }\n    }\n    return -1\n}\n\nconst arr = [8, 87, 3, 0, -12, 88, 4351, 0.7];\n\nimport {test} from 'ava'\ntest(t=>t.is(binarySearch(arr, 0), 3))"]}
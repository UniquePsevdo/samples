{"version":3,"sources":["observer.js"],"names":["Observable","constructor","observers","subscribe","observer","console","log","getNumber","push","unsubscribe","obs","number","notify","data","index","indexOf","onNotify","notifyAll","Observer","observable","observer1","observer2","observer3","observer4","observer5","msg"],"mappings":";;AAAA,MAAMA,UAAN,CAAiB;AACbC,kBAAa;AACT,aAAKC,SAAL,GAAiB,EAAjB;AACH;;AAEDC,cAAUC,QAAV,EAAmB;AACfC,gBAAQC,GAAR,CAAYF,SAASG,SAAT,KAAuB,aAAnC;AACA,aAAKL,SAAL,CAAeM,IAAf,CAAoBJ,QAApB;AACH;;AAEDK,gBAAYL,QAAZ,EAAqB;AACjB,aAAI,IAAIM,GAAR,IAAe,KAAKR,SAApB,EAA8B;AAC1B,gBAAGQ,IAAIC,MAAJ,KAAeP,SAASO,MAA3B,EAAkC;AAC9BN,wBAAQC,GAAR,CAAYI,IAAIH,SAAJ,KAAkB,eAA9B;AACH;AACJ;AACJ;;AAEDK,WAAOR,QAAP,EAAiBS,IAAjB,EAAsB;AAClB,YAAIC,QAAQ,KAAKZ,SAAL,CAAea,OAAf,CAAuBX,QAAvB,CAAZ;AACA,YAAGU,QAAQ,CAAC,CAAZ,EAAc;AACV,iBAAKZ,SAAL,CAAeY,KAAf,EAAsBE,QAAtB,CAA+BH,IAA/B;AACH;AACJ;;AAEDI,cAAUJ,IAAV,EAAe;AACX,aAAI,IAAIT,QAAR,IAAoB,KAAKF,SAAzB,EAAmC;AAC/BE,qBAASY,QAAT,CAAkBH,IAAlB;AACH;AACJ;;AA7BY;;AAkCjB,MAAMK,QAAN,CAAc;AACVjB,gBAAYU,MAAZ,EAAmB;AACf,aAAKA,MAAL,GAAcA,MAAd;AACH;;AAEDJ,gBAAW;AACP,eAAO,KAAKI,MAAZ;AACH;;AAEDK,aAASH,IAAT,EAAc;AACVR,gBAAQC,GAAR,CAAYO,IAAZ;AACH;AAXS;;AAcd,IAAIM,aAAa,IAAInB,UAAJ,EAAjB;;AAEA,IAAIoB,YAAY,IAAIF,QAAJ,CAAa,GAAb,CAAhB;AACA,IAAIG,YAAY,IAAIH,QAAJ,CAAa,GAAb,CAAhB;AACA,IAAII,YAAY,IAAIJ,QAAJ,CAAa,GAAb,CAAhB;AACA,IAAIK,YAAY,IAAIL,QAAJ,CAAa,GAAb,CAAhB;AACA,IAAIM,YAAY,IAAIN,QAAJ,CAAa,GAAb,CAAhB;;AAEAC,WAAWhB,SAAX,CAAqBiB,SAArB;AACAD,WAAWhB,SAAX,CAAqBkB,SAArB;AACAF,WAAWhB,SAAX,CAAqBmB,SAArB;AACAH,WAAWhB,SAAX,CAAqBoB,SAArB;AACAJ,WAAWhB,SAAX,CAAqBqB,SAArB;;AAEAL,WAAWP,MAAX,CAAkBQ,SAAlB,EAA6B,EAACK,KAAM,kBAAP,EAA7B;AACAN,WAAWV,WAAX,CAAuBW,SAAvB;AACAD,WAAWF,SAAX,CAAqB,EAACQ,KAAM,QAAP,EAArB","file":"observer.js","sourcesContent":["class Observable {\n    constructor(){\n        this.observers = [];\n    }\n\n    subscribe(observer){\n        console.log(observer.getNumber() + ' subscribed');\n        this.observers.push(observer);\n    }\n\n    unsubscribe(observer){\n        for(let obs of this.observers){\n            if(obs.number === observer.number){\n                console.log(obs.getNumber() + ' unsubscribed');\n            }\n        }\n    }\n\n    notify(observer, data){\n        let index = this.observers.indexOf(observer);\n        if(index > -1){\n            this.observers[index].onNotify(data)\n        }\n    }\n\n    notifyAll(data){\n        for(let observer of this.observers){\n            observer.onNotify(data);\n        }\n    }\n\n\n}\n\nclass Observer{\n    constructor(number){\n        this.number = number\n    }\n\n    getNumber(){\n        return this.number;\n    }\n\n    onNotify(data){\n        console.log(data);\n    }\n}\n\nlet observable = new Observable();\n\nlet observer1 = new Observer('1');\nlet observer2 = new Observer('2');\nlet observer3 = new Observer('3');\nlet observer4 = new Observer('4');\nlet observer5 = new Observer('5');\n\nobservable.subscribe(observer1);\nobservable.subscribe(observer2);\nobservable.subscribe(observer3);\nobservable.subscribe(observer4);\nobservable.subscribe(observer5);\n\nobservable.notify(observer1, {msg : 'Hello observer1!'});\nobservable.unsubscribe(observer1);\nobservable.notifyAll({msg : 'Hello!'});"]}
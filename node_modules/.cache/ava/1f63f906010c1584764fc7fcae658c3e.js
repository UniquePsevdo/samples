'use strict';

var _ava = require('ava');

/*function permute(str){
    return permuteArr(str.split(''))
}

function flatten(arr){
    return arr.reduce((acc, curr)=>acc.concat(curr), [])
}

function without(arr, a){
    let result = [...arr]
    result.splice(arr.indexOf(a), 1)
    return result
}

function permuteArr(arr){
    if(arr.length < 2){
        return arr
    }
    return flatten(arr.map(a => permuteArr(without(arr, a)).map((b)=>a.concat(b))))
}*/

function permute(str) {
    return permuteArr(str.split(''));
}

function without(arr, a) {
    let result = [...arr];
    result.splice(arr.indexOf(a), 1);
    return result;
}

function flatten(arr) {
    return arr.reduce((acc, curr) => [...acc, ...curr], []);
}

function permuteArr(arr) {
    if (arr.length < 2) {
        return arr;
    }
    return flatten(arr.map(a => permuteArr(without(arr, a)).map(b => a.concat(b))));
}

// tests


(0, _ava.test)(t => t.deepEqual(permute(''), []));
(0, _ava.test)(t => t.deepEqual(permute('abc'), ['abc', 'acb', 'bac', 'bca', 'cab', 'cba']));
//# sourceMappingURL=/Users/mac/WebstormProjects/interview/node_modules/.cache/ava/1f63f906010c1584764fc7fcae658c3e.js.map
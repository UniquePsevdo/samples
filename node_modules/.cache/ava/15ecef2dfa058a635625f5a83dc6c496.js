'use strict';

var _ava = require('ava');

/*let reduceAsync = async (array, fn, value) => {
    for (let a of array) {
        value = fn(value, await a())
    }
    return value
}*/

let reduceAsync = async (arr, fn, val) => {
    for (let a of arr) {
        val = fn(val, a());
    }
    return val;
};

/// tests
// суть тестов заключается в том, что создаются функции которые возвращают промисы с выполненными значениями
// одно из них с таймаутом
//

(0, _ava.test)(async t => {
    let a = () => Promise.resolve('a');
    let b = () => Promise.resolve('b');
    let c = () => new Promise(resolve => setTimeout(() => resolve('c'), 100));

    t.deepEqual((await reduceAsync([a, b, c], (accum, value) => [...accum, value], [])), ['a', 'b', 'c']);
    t.deepEqual((await reduceAsync([a, c, b], (accum, value) => [...accum, value], ['d'])), ['d', 'a', 'c', 'b']);
});
//# sourceMappingURL=/Users/mac/WebstormProjects/interview/node_modules/.cache/ava/15ecef2dfa058a635625f5a83dc6c496.js.map
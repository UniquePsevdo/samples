{"version":3,"sources":["isBalanced.js"],"names":["isBalanced","str","stack","Stack","arr","split","i","length","push","pairOf","peek","pop","items","pairs","key","constructor","item","t","truthy","falsy"],"mappings":";;;;;AAsDA;;AAtDA,SAASA,UAAT,CAAoBC,GAApB,EAAwB;AACpB,QAAIC,QAAQ,IAAIC,KAAJ,EAAZ;AACA,QAAIC,MAAMH,IAAII,KAAJ,CAAU,EAAV,CAAV;AACA,SAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIF,IAAIG,MAAvB,EAA+BD,GAA/B,EAAmC;AAC/B,gBAAOF,IAAIE,CAAJ,CAAP;AACI,iBAAK,GAAL;AACA,iBAAK,GAAL;AACA,iBAAK,GAAL;AACIJ,sBAAMM,IAAN,CAAWJ,IAAIE,CAAJ,CAAX;AACA;AACJ,iBAAK,GAAL;AACA,iBAAK,GAAL;AACA,iBAAK,GAAL;AACI,oBAAGG,OAAOP,MAAMQ,IAAN,EAAP,MAAyBN,IAAIE,CAAJ,CAA5B,EAAmC;AAC/BJ,0BAAMS,GAAN;AACH,iBAFD,MAEK;AACD,2BAAO,KAAP;AACH;;AAbT;AAgBH;AACD,WAAOT,MAAMU,KAAN,CAAYL,MAAZ,KAAuB,CAA9B;AAEH;;AAED,IAAIM,QAAQ;AACR,SAAI,GADI;AAER,SAAI,GAFI;AAGR,SAAI;AAHI,CAAZ;;AAMA,SAASJ,MAAT,CAAgBK,GAAhB,EAAoB;AAChB,WAAOD,MAAMC,GAAN,CAAP;AACH;;AAED,MAAMX,KAAN,CAAY;AACRY,kBAAa;AACT,aAAKH,KAAL,GAAa,EAAb;AACH;;AAEDD,UAAK;AACD,aAAKC,KAAL,CAAWD,GAAX;AACH;;AAEDH,SAAKQ,IAAL,EAAU;AACN,aAAKJ,KAAL,CAAWJ,IAAX,CAAgBQ,IAAhB;AACH;;AAEDN,WAAM;AACF,eAAO,KAAKE,KAAL,CAAW,KAAKA,KAAL,CAAWL,MAAX,GAAoB,CAA/B,CAAP;AACH;AAfO;;AAoBZ,eAAKU;AAAA;;AAAA,WAAGA,EAAEC,MAAF,uBAASlB,WAAW,2BAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;AAAA,CAAL;AACA,eAAKiB;AAAA;;AAAA,WAAGA,EAAEE,KAAF,yBAAQnB,WAAW,mBAAX,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;AAAA,CAAL","file":"isBalanced.js","sourcesContent":["function isBalanced(str){\n    let stack = new Stack();\n    let arr = str.split('');\n    for(let i = 0; i < arr.length; i++){\n        switch(arr[i]){\n            case '{':\n            case '[':\n            case '(':\n                stack.push(arr[i]);\n                break;\n            case '}':\n            case ']':\n            case ')':\n                if(pairOf(stack.peek()) === arr[i]){\n                    stack.pop();\n                }else{\n                    return false;\n                }\n\n        }\n    }\n    return stack.items.length === 0;\n\n}\n\nlet pairs = {\n    '{':'}',\n    '(':')',\n    '[':']'\n}\n\nfunction pairOf(key){\n    return pairs[key];\n}\n\nclass Stack {\n    constructor(){\n        this.items = [];\n    }\n\n    pop(){\n        this.items.pop();\n    }\n\n    push(item){\n        this.items.push(item)\n    }\n\n    peek(){\n        return this.items[this.items.length - 1];\n    }\n}\n\n\nimport {test} from 'ava'\ntest(t=>t.truthy(isBalanced('(foo { bar (baz) [boo] })')))\ntest(t=>t.falsy(isBalanced('foo { bar { baz }')))"]}
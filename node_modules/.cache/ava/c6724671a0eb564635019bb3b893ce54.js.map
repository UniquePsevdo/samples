{"version":3,"sources":["sort.js"],"names":["sort","arr","length","mid","Math","floor","left","slice","right","merge","result","leftIdx","rightIdx","push","concat","t","deepEqual"],"mappings":";;AAwBA;;AAxBA,SAASA,IAAT,CAAcC,GAAd,EAAkB;AACd,QAAGA,IAAIC,MAAJ,GAAW,CAAd,EAAgB;AACZ,eAAOD,GAAP;AACH;AACD,QAAIE,MAAMC,KAAKC,KAAL,CAAWJ,IAAIC,MAAJ,GAAW,CAAtB,CAAV;AACA,QAAII,OAAOL,IAAIM,KAAJ,CAAU,CAAV,EAAaJ,GAAb,CAAX;AACA,QAAIK,QAAQP,IAAIM,KAAJ,CAAUJ,GAAV,CAAZ;AACA,WAAOM,MAAMT,KAAKM,IAAL,CAAN,EAAkBN,KAAKQ,KAAL,CAAlB,CAAP;AACH;AACD,SAASC,KAAT,CAAeH,IAAf,EAAqBE,KAArB,EAA2B;AACvB,QAAIE,SAAS,EAAb;AAAA,QACIC,UAAQ,CADZ;AAAA,QAEIC,WAAS,CAFb;;AAIA,WAAMD,UAAUL,KAAKJ,MAAf,IAAyBU,WAAWJ,MAAMN,MAAhD,EAAuD;AACnDQ,eAAOG,IAAP,CACIP,KAAKK,OAAL,IAAgBH,MAAMI,QAAN,CAAhB,GACIN,KAAKK,SAAL,CADJ,GAEIH,MAAMI,UAAN,CAHR;AAKH;AACD,WAAOF,OAAOI,MAAP,CAAcR,KAAKC,KAAL,CAAWI,OAAX,CAAd,EAAmCG,MAAnC,CAA0CN,MAAMD,KAAN,CAAYK,QAAZ,CAA1C,CAAP;AACH;;AAGD,eAAKG,KAAGA,EAAEC,SAAF,CAAYhB,KAAK,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,EAAS,CAAT,EAAW,EAAX,EAAc,CAAd,CAAL,CAAZ,EAAoC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAApC,CAAR","file":"sort.js","sourcesContent":["function sort(arr){\n    if(arr.length<2){\n        return arr;\n    }\n    let mid = Math.floor(arr.length/2);\n    let left = arr.slice(0, mid);\n    let right = arr.slice(mid)\n    return merge(sort(left), sort(right))\n}\nfunction merge(left, right){\n    let result = [],\n        leftIdx=0,\n        rightIdx=0;\n\n    while(leftIdx < left.length && rightIdx < right.length){\n        result.push(\n            left[leftIdx] < right[rightIdx]?\n                left[leftIdx++]:\n                right[rightIdx++]\n        )\n    }\n    return result.concat(left.slice(leftIdx)).concat(right.slice(rightIdx))\n}\n\nimport {test} from 'ava'\ntest(t=>t.deepEqual(sort([11,12,3,9,10,5]), [3,5,9,10,11,12]))"]}
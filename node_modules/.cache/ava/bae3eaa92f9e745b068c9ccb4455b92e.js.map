{"version":3,"sources":["reduceAsync.js"],"names":["reduceAsync","val","fn","arr","i","length","value","t","a","Promise","resolve","b","c","setTimeout","deepEqual","acc"],"mappings":";;AAgBA;;AAhBA;;;;;;;AAOA,IAAIA,cAAc,OAAOC,GAAP,EAAYC,EAAZ,EAAgBC,GAAhB,KAAsB;AACpC,SAAI,IAAIC,IAAE,CAAV,EAAaA,IAAID,IAAIE,MAArB,EAA6BD,GAA7B,EAAiC;AAC7BE,gBAAQJ,IAAG,MAAMC,IAAIC,CAAJ,GAAT,EAAR;AACH;AACD,WAAOE,KAAP;AACH,CALD;;AAOA;;AAIA,eAAK,MAAMC,CAAN,IAAW;AACZ,QAAIC,IAAI,MAAMC,QAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,QAAIC,IAAI,MAAMF,QAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,QAAIE,IAAI,MAAM,IAAIH,OAAJ,CAAYC,WAAWG,WAAW,MAAMH,QAAQ,GAAR,CAAjB,EAA+B,GAA/B,CAAvB,CAAd;;AAEAH,MAAEO,SAAF,EACI,MAAMd,YAAY,CAACQ,CAAD,EAAIG,CAAJ,EAAOC,CAAP,CAAZ,EAAuB,CAACG,GAAD,EAAMT,KAAN,KAAgB,CAAC,GAAGS,GAAJ,EAAST,KAAT,CAAvC,EAAwD,EAAxD,CADV,GAEI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFJ;AAIAC,MAAEO,SAAF,EACI,MAAMd,YAAY,CAACQ,CAAD,EAAII,CAAJ,EAAOD,CAAP,CAAZ,EAAuB,CAACI,GAAD,EAAMT,KAAN,KAAgB,CAAC,GAAGS,GAAJ,EAAST,KAAT,CAAvC,EAAwD,CAAC,GAAD,CAAxD,CADV,GAEI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAFJ;AAIH,CAbD","file":"reduceAsync.js","sourcesContent":["/*let reduceAsync = async (array, fn, value) => {\n    for (let a of array) {\n        value = fn(value, await a())\n    }\n    return value\n}*/\n\nlet reduceAsync = async (val, fn, arr)=>{\n    for(let i=0; i < arr.length; i++){\n        value = fn(await arr[i]())\n    }\n    return value;\n}\n\n/// tests\n\nimport { test } from 'ava'\n\ntest(async t => {\n    let a = () => Promise.resolve('a')\n    let b = () => Promise.resolve('b')\n    let c = () => new Promise(resolve => setTimeout(() => resolve('c'), 100))\n\n    t.deepEqual(\n        await reduceAsync([a, b, c], (acc, value) => [...acc, value], []),\n        ['a', 'b', 'c']\n    )\n    t.deepEqual(\n        await reduceAsync([a, c, b], (acc, value) => [...acc, value], ['d']),\n        ['d', 'a', 'c', 'b']\n    )\n})"]}
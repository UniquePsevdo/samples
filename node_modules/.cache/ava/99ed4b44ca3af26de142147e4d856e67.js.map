{"version":3,"sources":["fib2.js"],"names":["fibonacci","cache","fib","idx","result","t","is"],"mappings":";;AA0BA;;AA1BA;;;;;;;;;;;;AAYA,IAAIA,YAAY,YAAW;AACvB,QAAIC,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAZ;AACA,WAAO,SAASC,GAAT,CAAaC,GAAb,EAAiB;AACpB,YAAIC,MAAJ;AACA,YAAG,OAAOH,MAAME,GAAN,CAAP,KAAsB,QAAzB,EAAkC;AAC9BC,qBAASH,MAAME,GAAN,CAAT;AACH,SAFD,MAEK;AACDC,qBAASF,IAAIC,MAAM,CAAV,IAAeD,IAAIC,MAAM,CAAV,CAAxB;AACAF,kBAAME,GAAN,IAAaC,MAAb;AACH;AACD,eAAOA,MAAP;AACH,KATD;AAUH,CAZe,EAAhB;;AAeA,eAAKC,KAAGA,EAAEC,EAAF,CAAKN,UAAU,CAAV,CAAL,EAAmB,CAAnB,CAAR","file":"fib2.js","sourcesContent":["/*let fibonacci = function(){\n    let cache =[0, 1];\n    let fib = function(index){\n        let result = cache[index]\n        if(typeof result!=='number'){\n            result = fib(index-1) + fib(index-2)\n        }\n        return result;\n    }\n    return fib;\n}();*/\n\nlet fibonacci = function (){\n    let cache = [0, 1];\n    return function fib(idx){\n        let result;\n        if(typeof cache[idx] === 'number'){\n            result = cache[idx];\n        }else{\n            result = fib(idx - 1) + fib(idx - 2);\n            cache[idx] = result;\n        }\n        return result;\n    }\n}();\n\nimport {test} from 'ava'\ntest(t=>t.is(fibonacci(5), 5))"]}
{"version":3,"sources":["factorial.js"],"names":["tailFactorial","n","total","factorial","console","log"],"mappings":";;AAAA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AAcA,SAASA,aAAT,CAAuBC,CAAvB,EAA0BC,KAA1B,EAAgC;AAC5B,YAAOD,CAAP;AACI,aAAK,CAAL;AACI,mBAAO,CAAP;AACJ,aAAK,CAAL;AACI,mBAAOC,KAAP;AACJ;AAAS,mBAAOF,cAAcC,IAAE,CAAhB,EAAmBA,IAAEC,KAArB,CAAP;AALb;AAOH;;AAED,SAASC,SAAT,CAAmBF,CAAnB,EAAqB;AACjB,WAAOD,cAAcC,CAAd,EAAiB,CAAjB,CAAP;AACH;;AAEDG,QAAQC,GAAR,CAAYF,UAAU,CAAV,CAAZ","file":"factorial.js","sourcesContent":["/*function tailFactorial(n, total) {\n    switch (n) {\n        case 0: return 1\n        case 1: return total\n        default: return tailFactorial(n - 1, n * total)\n    }\n}\n\nfunction factorial(n) {\nif (x < 0) throw Error(\"Cannot calculate factorial of a negative number\");\n    return tailFactorial(n, 1)\n}*/\n\n// суть заключается в том чтобы рекурсивно пройтись из хвоста tail до 1,\n// в функции tailFactorial(n, total)\n// n - это число для которого нужно вычислить факториал\n// 1 передается в качестве инициализационного вызова параметра total\n// n - факториал искомого числа в функции factorial\n// total - параметр который накапливает итоговое значение\n\n/*function tailFactorial(n, total){\n    switch(n){\n        case 0:\n            return 1\n        case 1:\n            return total\n        default: return tailFactorial(n-1, n*total)\n    }\n}\n\nfunction factorial(n){\n    return tailFactorial(n, 1);\n}*/\n\nfunction tailFactorial(n, total){\n    switch(n){\n        case 0:\n            return 0\n        case 1:\n            return total\n        default: return tailFactorial(n-1, n*total)\n    }\n}\n\nfunction factorial(n){\n    return tailFactorial(n, 1)\n}\n\nconsole.log(factorial(5));"]}
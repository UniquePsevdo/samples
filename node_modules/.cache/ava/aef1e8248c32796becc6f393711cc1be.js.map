{"version":3,"sources":["intersection.js"],"names":["arr1","arr2","intersect","seen","reduce","current","result","push","console","log"],"mappings":";;AAAA,IAAIA,OAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAX;AACA,IAAIC,OAAO,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,EAAS,CAAT,EAAW,EAAX,EAAc,CAAd,CAAX;;AAEA;;;;;;;;;;;;;AAaA,SAASC,SAAT,CAAmBF,IAAnB,EAAyBC,IAAzB,EAA8B;AAC1B,QAAIE,OAAOH,KAAKI,MAAL,CAAY,CAACD,IAAD,EAAOE,OAAP,KAAiB;AACpCF,aAAKE,OAAL,IAAgB,IAAhB;AACA,eAAOF,IAAP;AACH,KAHU,EAGR,EAHQ,CAAX;AAIA,WAAOF,KAAKG,MAAL,CAAY,CAACE,MAAD,EAASD,OAAT,KAAmB;AAClC,YAAGF,KAAKE,OAAL,CAAH,EAAiB;AACbC,mBAAOC,IAAP,CAAYF,OAAZ;AACH;AACD,eAAOC,MAAP;AACH,KALM,EAKJ,EALI,CAAP;AAOH;;AAEDE,QAAQC,GAAR,CAAYP,UAAUF,IAAV,EAAgBC,IAAhB,CAAZ","file":"intersection.js","sourcesContent":["let arr1 = [1,2,3,9,0,5]\nlet arr2 = [11,12,3,9,10,5]\n\n/*function intersect(arr1, arr2){\n    let seen = arr1.reduce((seen, current)=>{\n        seen[current] = true;\n        return seen;\n    }, {})\n    return arr2.reduce((result, current)=>{\n        if(seen[current]){\n            return result.concat(current);\n        }\n        return result;\n    }, [])\n}*/\n\nfunction intersect(arr1, arr2){\n    let seen = arr1.reduce((seen, current)=>{\n        seen[current] = true;\n        return seen;\n    }, {});\n    return arr2.reduce((result, current)=>{\n        if(seen[current]){\n            result.push(current);\n        }\n        return result;\n    }, [])\n\n}\n\nconsole.log(intersect(arr1, arr2));"]}
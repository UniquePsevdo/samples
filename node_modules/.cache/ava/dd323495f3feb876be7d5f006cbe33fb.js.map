{"version":3,"sources":["promises.js"],"names":["cookDinner","Promise","resolve","reject","setTimeout","rand","Math","round","random","then","data","console","log","err","catch"],"mappings":";;AAAA,IAAIA,aAAa,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAC5CC,eAAW,MAAI;AACX,YAAIC,OAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAc,GAAzB,CAAX;AACA,YAAGH,IAAH,EAAQ;AACJH,oBAAQ,cAAR;AACH,SAFD,MAEK;AACDC,mBAAO,YAAP;AACH;AACJ,KAPD,EAOG,GAPH;AAQH,CATgB,CAAjB;;AAWAH,WAAWS,IAAX,CAAiBC,IAAD,IAAQ;AACpBC,YAAQC,GAAR,CAAYF,IAAZ;AACH,CAFD,EAEIG,GAAD,IAAO;AACNF,YAAQC,GAAR,CAAY,UAAZ,EAAwBC,GAAxB;AACH,CAJD,EAIGC,KAJH,CAIUD,GAAD,IAAO;AACZF,YAAQC,GAAR,CAAY,SAAZ,EAAuBC,GAAvB;AACH,CAND","file":"promises.js","sourcesContent":["let cookDinner = new Promise((resolve, reject)=>{\n    setTimeout(()=>{\n        let rand = Math.round(Math.random()*0.8);\n        if(rand){\n            resolve('resolveParam');\n        }else{\n            reject('rejectData');\n        }\n    }, 500)\n});\n\ncookDinner.then((data)=>{\n    console.log(data);\n}, (err)=>{\n    console.log('reject: ', err);\n}).catch((err)=>{\n    console.log('catch: ', err);\n})"]}
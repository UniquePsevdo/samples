'use strict';

var _ava = require('ava');

function includes(array, number) {
    return binarySearch(array, number) > -1;
}

/*
function binarySearch(array, number, leftIndex, rightIndex) {
    let midIndex = Math.floor((rightIndex + leftIndex) / 2)
    let current = array[midIndex]
    if (rightIndex < leftIndex) {
        return undefined
    }
    if (number === current) {
        return midIndex
    }
    if (number < current) {
        return binarySearch(array, number, leftIndex, midIndex - 1)
    }
    return binarySearch(array, number, midIndex + 1, rightIndex)
}*/

function binarySearch(arr, val) {
    let minIdx = 0,
        maxIdx = arr.length - 1,
        guessIdx;
    while (minIdx < maxIdx) {
        guessIdx = Math.floor((maxIdx + minIdx) / 2);
        if (arr[guessIdx] === val) {
            return guessIdx;
        } else if (arr[minIdx] < arr[guessIdx]) {
            minIdx = minIdx + 1;
        } else {
            maxIdx = maxIdx - 1;
        }
    }
    return -1;
}

const arr = [8, 87, 3, 0, -12, 88, 4351, 0.7];

(0, _ava.test)(t => t.is(binarySearch(arr, 0), 3));
//# sourceMappingURL=/Users/mac/WebstormProjects/interview/node_modules/.cache/ava/90a066973b06447140f4317394ac6e28.js.map
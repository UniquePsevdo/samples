'use strict';

var _ava = require('ava');

/*function debounce(fn, delay) {      //= 0

    let last = {
        time: null,
        timerId: null
    }

    return () => {
        let time = Date.now()
        if (last.time && (time - last.time) < delay) {
            clearTimeout(last.timerId)
        }
        last = {
            time,
            timerId: setTimeout(fn, delay)
        }
    }
}*/
function debounce(fn, delay = 0) {
    let last = {
        time: null,
        timerId: null
    };
    return () => {
        let time = Date.now();
        if (last.time && time - last.time < delay) {
            clearTimeout(last.timerId);
        }
        last = {
            time,
            timerId: setTimeout(fn, delay)
        };
    };
}
/// test

_ava.test.cb(t => {
    t.plan(1);
    let counter = 0;
    let a = () => {
        console.log('111');
        counter++;
        t.is(1, counter);
    };
    let b = debounce(a, 1000);

    for (let i = 0; i < 10; i++) {
        b();
    }
    setTimeout(() => {
        t.end();
    }, 1500);
});
//# sourceMappingURL=/Users/mac/WebstormProjects/interview/node_modules/.cache/ava/0a91286943253adcdb5cfad529ab1803.js.map
{"version":3,"sources":["intersection.js"],"names":["arr1","arr2","intersect","seen","reduce","acc","curr","push","t","deepEqual"],"mappings":";;AAoCA;;AApCA,IAAIA,OAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAX;AACA,IAAIC,OAAO,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,EAAS,CAAT,EAAW,EAAX,EAAc,CAAd,CAAX;;AAEA;;;;;;;;;;;;;;;;AAgBA,SAASC,SAAT,CAAmBF,IAAnB,EAAyBC,IAAzB,EAA8B;AAC1B,QAAIE,OAAOH,KAAKI,MAAL,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAa;AAChC,YAAG,CAACD,IAAIC,IAAJ,CAAJ,EAAc;AACVD,gBAAIC,IAAJ,IAAU,IAAV;AACH;AACD,eAAOD,GAAP;AACH,KALU,EAKR,EALQ,CAAX;AAMA,WAAOJ,KAAKG,MAAL,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAa;AAC5B,YAAGH,KAAKG,IAAL,CAAH,EAAc;AACVD,gBAAIE,IAAJ,CAASD,IAAT;AACH;AACD,eAAOD,GAAP;AACH,KALM,EAKJ,EALI,CAAP;AAQH;;AAGD,eAAKG,KAAGA,EAAEC,SAAF,CAAYP,UAAUF,IAAV,EAAgBC,IAAhB,CAAZ,EAAkC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAlC,CAAR","file":"intersection.js","sourcesContent":["let arr1 = [1,2,3,9,0,5]\nlet arr2 = [11,12,3,9,10,5]\n\n/*\nfunction intersect(arr1, arr2){\n    let seen = arr1.reduce((seen, current)=>{\n        seen[current] = true;\n        return seen;\n    }, {});\n    return arr2.reduce((result, current)=>{\n        if(seen[current]){\n            result.push(current);\n        }\n        return result;\n    }, [])\n\n}\n*/\n\nfunction intersect(arr1, arr2){\n    let seen = arr1.reduce((acc, curr)=>{\n        if(!acc[curr]){\n            acc[curr]=true;\n        }\n        return acc;\n    }, {})\n    return arr2.reduce((acc, curr)=>{\n        if(seen[curr]){\n            acc.push(curr);\n        }\n        return acc;\n    }, [])\n\n\n}\n\nimport {test} from 'ava'\ntest(t=>t.deepEqual(intersect(arr1, arr2),[3,9,5]))"]}
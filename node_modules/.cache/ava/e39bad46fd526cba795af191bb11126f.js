'use strict';

var _ava = require('ava');

let reduceAsync = async (array, fn, value) => {
    for (let a of array) {
        value = fn(value, (await a()));
    }
    return value;
};

/*let reduceAsync = async (fn, arr, val)=>{
    for(let i = 0; i < arr.lenth; i++){
        val = fn(val, await a())
    }
    return val;
}*/

/// tests

(0, _ava.test)(async t => {
    let a = () => Promise.resolve('a');
    let b = () => Promise.resolve('b');
    let c = () => new Promise(resolve => setTimeout(() => resolve('c'), 100));

    t.deepEqual((await reduceAsync([a, b, c], (acc, value) => [...acc, value], [])), ['a', 'b', 'c']);
    t.deepEqual((await reduceAsync([a, c, b], (acc, value) => [...acc, value], ['d'])), ['d', 'a', 'c', 'b']);
});
//# sourceMappingURL=/Users/mac/WebstormProjects/interview/node_modules/.cache/ava/e39bad46fd526cba795af191bb11126f.js.map
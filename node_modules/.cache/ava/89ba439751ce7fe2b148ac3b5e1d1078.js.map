{"version":3,"sources":["permute.js"],"names":["permute","arr","permuteArr","split","length","flatten","map","a","without","b","concat","result","splice","indexOf","reduce","acc","curr","t","deepEqual"],"mappings":";;AA6BA;;AA7BA,SAASA,OAAT,CAAiBC,GAAjB,EAAqB;AACjB,WAAOC,WAAWD,IAAIE,KAAJ,CAAU,EAAV,CAAX,CAAP;AACH;;AAED,SAASD,UAAT,CAAoBD,GAApB,EAAwB;AACpB,YAAOA,IAAIG,MAAX;AACI,aAAK,CAAL;AACI,mBAAO,EAAP;AACJ,aAAK,CAAL;AACI,mBAAOH,GAAP;AACZ;;;;AAIQ;AAAS,mBAAOI,QAAQJ,IAAIK,GAAJ,CAAQC,KAAKL,WAAWM,QAAQP,GAAR,EAAaM,CAAb,CAAX,EAA4BD,GAA5B,CAAgCG,KAAKF,EAAEG,MAAF,CAASD,CAAT,CAArC,CAAb,CAAR,CAAP;AATb;AAWH;;AAED,SAASD,OAAT,CAAiBP,GAAjB,EAAsBM,CAAtB,EAAwB;AACpB,QAAII,SAAS,CAAC,GAAGV,GAAJ,CAAb;AACAU,WAAOC,MAAP,CAAcX,IAAIY,OAAJ,CAAYN,CAAZ,CAAd,EAA8B,CAA9B;AACA,WAAOI,MAAP;AACH;;AAED,SAASN,OAAT,CAAiBJ,GAAjB,EAAqB;AACjB,WAAOA,IAAIa,MAAJ,CAAW,CAACC,GAAD,EAAMC,IAAN,KAAcD,IAAIL,MAAJ,CAAWM,IAAX,CAAzB,EAA2C,EAA3C,CAAP;AACH;;AAED;;;AAGA,eAAKC,KAAKA,EAAEC,SAAF,CAAYlB,QAAQ,EAAR,CAAZ,EAAyB,EAAzB,CAAV;AACA,eAAKiB,KAAKA,EAAEC,SAAF,CAAYlB,QAAQ,KAAR,CAAZ,EAA4B,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CAA5B,CAAV","file":"permute.js","sourcesContent":["function permute(arr){\n    return permuteArr(arr.split(''))\n}\n\nfunction permuteArr(arr){\n    switch(arr.length){\n        case 0:\n            return []\n        case 1:\n            return arr\n/*\n        default: return flatten(array.map(a => permuteArray(without(array, a)).map(b => a.concat(b))))\n*/\n\n        default: return flatten(arr.map(a => permuteArr(without(arr, a)).map(b => a.concat(b))))\n    }\n}\n\nfunction without(arr, a){\n    let result = [...arr]\n    result.splice(arr.indexOf(a), 1)\n    return result\n}\n\nfunction flatten(arr){\n    return arr.reduce((acc, curr)=> acc.concat(curr), [])\n}\n\n// tests\nimport { test } from 'ava'\n\ntest(t => t.deepEqual(permute(''), []))\ntest(t => t.deepEqual(permute('abc'), ['abc', 'acb', 'bac', 'bca', 'cab', 'cba']))"]}
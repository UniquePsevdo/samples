{"version":3,"sources":["fib2.js"],"names":["fibonacci","cache","fib","n","result","t","is"],"mappings":";;AA0BA;;AA1BA;;;;;;;;;;;;AAYA,IAAIA,YAAY,YAAU;AACtB,QAAIC,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAZ;;AAEA,QAAIC,MAAM,UAASC,CAAT,EAAW;AACjB,YAAIC,SAASH,MAAME,CAAN,CAAb;AACA,YAAG,OAAOC,MAAP,KAAkB,QAArB,EAA8B;AAC1BA,qBAASF,IAAIC,IAAE,CAAN,IAAWD,IAAIC,IAAE,CAAN,CAApB;AACAF,kBAAME,CAAN,IAAWC,MAAX;AACH;AACD,eAAOA,MAAP;AACH,KAPD;AAQA,WAAOF,GAAP;AACH,CAZe,EAAhB;;AAeA,eAAKG,KAAGA,EAAEC,EAAF,CAAKN,UAAU,CAAV,CAAL,EAAmB,CAAnB,CAAR","file":"fib2.js","sourcesContent":["/*let fibonacci = function(){\n    let cache =[0, 1];\n    let fib = function(index){\n        let result = cache[index]\n        if(typeof result!=='number'){\n            result = fib(index-1) + fib(index-2)\n        }\n        return result;\n    }\n    return fib;\n}();*/\n\nlet fibonacci = function(){\n    let cache = [0, 1]\n\n    let fib = function(n){\n        let result = cache[n]\n        if(typeof result !== 'number'){\n            result = fib(n-1) + fib(n-2)\n            cache[n] = result\n        }\n        return result\n    }\n    return fib\n}()\n\nimport {test} from 'ava'\ntest(t=>t.is(fibonacci(5), 5))"]}
{"version":3,"sources":["reduceAsync.js"],"names":["reduceAsync","arr","fn","val","a","t","Promise","resolve","b","c","setTimeout","deepEqual","acc","current"],"mappings":";;AAuBA;;AAvBA;;;;;;;AAOA;;;;;;;;;AASA,IAAIA,cAAc,gBAAgBC,GAAhB,EAAqBC,EAArB,EAAyBC,GAAzB,EAA6B;AAC3C,SAAI,IAAIC,CAAR,IAAaH,GAAb,EAAiB;AACbE,cAAMD,GAAGC,GAAH,GAAQ,MAAMC,GAAd,EAAN;AACH;AACD,WAAOD,GAAP;AACH,CALD;;AASA,eAAK,MAAME,CAAN,IAAW;AACZ,QAAID,IAAI,MAAME,QAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,QAAIC,IAAI,MAAMF,QAAQC,OAAR,CAAgB,GAAhB,CAAd;AACA,QAAIE,IAAI,MAAM,IAAIH,OAAJ,CAAYC,WAAW;AAAEG,mBAAW,MAAI;AAACH,oBAAQ,GAAR;AAAa,SAA7B,EAA+B,GAA/B;AAAoC,KAA7D,CAAd;;AAEAF,MAAEM,SAAF,CAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAZ,GAA6B,MAAMX,YAAY,CAACI,CAAD,EAAII,CAAJ,EAAOC,CAAP,CAAZ,EAAuB,CAACG,GAAD,EAAMC,OAAN,KAAkB,CAAC,GAAGD,GAAJ,EAASC,OAAT,CAAzC,EAA4D,EAA5D,CAAnC;AACAR,MAAEM,SAAF,CAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAZ,GAAkC,MAAMX,YAAY,CAACI,CAAD,EAAII,CAAJ,EAAOC,CAAP,CAAZ,EAAuB,CAACG,GAAD,EAAMC,OAAN,KAAkB,CAAC,GAAGD,GAAJ,EAASC,OAAT,CAAzC,EAA4D,CAAC,GAAD,CAA5D,CAAxC;AAEH,CARD","file":"reduceAsync.js","sourcesContent":["/*let reduceAsync = async (array, fn, value) => {\n    for (let a of array) {\n        value = fn(value, await a())\n    }\n    return value\n}*/\n\n/*\nlet reduceAsync = async (array, fn, val)=>{\n    for(let a of array){\n        val = fn(val, await a())\n    }\n    return val\n}\n*/\n\nlet reduceAsync = async function (arr, fn, val){\n    for(let a of arr){\n        val = fn(val, await a())\n    }\n    return val\n}\n\nimport { test } from 'ava'\n\ntest(async t => {\n    let a = () => Promise.resolve('a')\n    let b = () => Promise.resolve('b')\n    let c = () => new Promise(resolve => { setTimeout(()=>{resolve('c')}, 100)})\n\n    t.deepEqual(['a', 'b', 'c'], await reduceAsync([a, b, c], (acc, current) => [...acc, current], []))\n    t.deepEqual(['d', 'a', 'b', 'c'], await reduceAsync([a, b, c], (acc, current) => [...acc, current], ['d']))\n\n})"]}